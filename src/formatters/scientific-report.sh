#!/bin/bash
# Scientific Research Report Formatter
# Specialized format for academic/scientific research

set -euo pipefail

RESEARCH_FILE="$1"

if [ ! -f "$RESEARCH_FILE" ]; then
    echo "Error: Research file not found: $RESEARCH_FILE"
    exit 1
fi

cat <<EOF
# Scientific Research Report

**Generated**: $(date "+%Y-%m-%d %H:%M:%S")
**Research Question**: $(jq -r '.original_question // "N/A"' "$RESEARCH_FILE")

---

## Executive Summary

$(jq -r '.summary' "$RESEARCH_FILE")

---

## Background & Literature Review

$(jq -r '.sections[] | select(.title == "Background" or .title == "Literature Review") | .content' "$RESEARCH_FILE")

---

## Key Findings

$(jq -r '.sections[] | select(.title | contains("Finding")) | "### \(.title)\n\n\(.content)\n\n**Confidence**: `\(.confidence)`\n\n**Key Papers**:\n\(.citations[] | "- [\(.title)](\(.url)) - \(.authors // "Unknown authors"), \(.venue // "Unknown venue"), \(.year // "N/A")")\n"' "$RESEARCH_FILE")

---

## Methodology Assessment

$(jq -r '.sections[] | select(.title == "Methodology") | .content' "$RESEARCH_FILE")

---

## Citation Network & Research Timeline

$(jq -r '.research_timeline[]? | "**\(.year)**: \(.development)"' "$RESEARCH_FILE")

---

## Consensus & Controversy

### Areas of Consensus
$(jq -r '.consensus_areas[]? | "- \(.)"' "$RESEARCH_FILE" || echo "No specific areas noted.")

### Controversial Areas
$(jq -r '.conflicting_information[]? | "#### \(.topic)\n\n\(.perspectives[] | "**Perspective**: \(.claim)\n\n**Sources**: \(.sources | join(", "))\n")\n**Discussion**: \(.resolution)\n"' "$RESEARCH_FILE")

---

## Limitations & Research Gaps

$(jq -r '.knowledge_gaps[]? | "- \(.)"' "$RESEARCH_FILE")

---

## Validation Results

$(jq -r '.validation.validation_summary | "**Overall Confidence**: `\(.overall_confidence)`\n\n- Peer-reviewed sources: \(.peer_reviewed_count // "N/A")\n- Total claims: \(.total_claims)\n- Verified: \(.verified_claims)\n- Questionable: \(.questionable_claims)"' "$RESEARCH_FILE")

$(if jq -e '.validation.concerns | length > 0' "$RESEARCH_FILE" >/dev/null 2>&1; then
    echo -e "\n### Validation Concerns\n"
    jq -r '.validation.concerns[] | "- **\(.type)**: \(.description)"' "$RESEARCH_FILE"
fi)

---

## References

$(jq -r '[.sections[]?.citations[]?] | unique_by(.doi // .url) | sort_by(.year) | reverse | .[] | "- \(.authors // "Unknown"), (\(.year // "N/A")). *\(.title)*. \(.venue // "Preprint"). DOI: \(.doi // "N/A"). Available: \(.url)"' "$RESEARCH_FILE")

---

*Generated by Deep Delve - Scientific Mode*
*Powered by [Claude Code](https://claude.com/claude-code)*
EOF
